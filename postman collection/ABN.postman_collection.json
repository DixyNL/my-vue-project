{
	"info": {
		"_postman_id": "681a6f5c-f15d-49ad-aac3-8295920bf2b5",
		"name": "ABN",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23605396"
	},
	"item": [
		{
			"name": "get data graph",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Response has data array\", function () {\r",
							"    pm.expect(jsonData).to.have.property('data').that.is.an('array');\r",
							"});\r",
							"\r",
							"pm.test(\"Each object has required fields\", function () {\r",
							"    jsonData.data.forEach(function(item) {\r",
							"\r",
							"        pm.expect(item).to.have.property('name').that.is.a('string');\r",
							"        \r",
							"        pm.expect(item).to.have.property('description').that.is.a('string');\r",
							"        \r",
							"        pm.expect(item).to.have.property('parent').that.is.a('string');\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/data",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"data"
					]
				}
			},
			"response": []
		},
		{
			"name": "get bigger data graph",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Response has data array\", function () {\r",
							"    pm.expect(jsonData).to.have.property('data').that.is.an('array');\r",
							"});\r",
							"\r",
							"pm.test(\"Each object has required fields\", function () {\r",
							"    jsonData.data.forEach(function(item) {\r",
							"\r",
							"        pm.expect(item).to.have.property('name').that.is.a('string');\r",
							"        \r",
							"        pm.expect(item).to.have.property('description').that.is.a('string');\r",
							"        \r",
							"        pm.expect(item).to.have.property('parent').that.is.a('string');\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/data/big",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"data",
						"big"
					]
				}
			},
			"response": []
		}
	]
}